<Window x:Class="TuriStore.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
        xmlns:local="clr-namespace:TuriStore"
        mc:Ignorable="d"
		WindowStyle="none"
		ResizeMode="NoResize"
		MouseDown="Window_Mousedown"
		WindowStartupLocation="CenterScreen"
		Background="Transparent"
		AllowsTransparency="true"
        Title="TuriStore #1 (Ricardo Pool)" Height="450" Width="800">
	<Border CornerRadius="10" Background="#1c1448" BorderBrush="MediumSlateBlue" BorderThickness="5">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="30"/>
				<RowDefinition/>
			</Grid.RowDefinitions>

			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition Width="25"/>
					<ColumnDefinition Width="25"/>
					<ColumnDefinition Width="5"/>
				</Grid.ColumnDefinitions>

				<TextBlock Text="TuriStore #1 (Ricardo Pool)"
						   Foreground="White"
						   FontSize="16"
						   FontFamily="Arial"
						   Grid.Column="0"
						   VerticalAlignment="Center"
						   Margin="10,0,0,0"/>

				<Button x:Name="btnMinimize"
						BorderThickness="0"
						Content="-"
						Foreground="White"
						FontSize="14"
						FontFamily="Arial"
						Cursor="Hand"
						Grid.Column="1"
						Click="BtnMinimize_Click">
					<Button.Style>
						<Style TargetType="Button">
							<Setter Property="Background" Value="#28AEED"/>
							<Style.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Background" Value="Orange"/>
								</Trigger>
							</Style.Triggers>
						</Style>
					</Button.Style>

					<Button.Template>
						<ControlTemplate TargetType="Button">
							<Border Width="18" Height="18" CornerRadius="9" Background="{TemplateBinding Background}">
								<ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
							</Border>
						</ControlTemplate>
					</Button.Template>
				</Button>

				<Button x:Name="btnClose"
						BorderThickness="0"
						Content="X"
						Foreground="White"
						FontSize="14"
						FontFamily="Arial"
						Cursor="Hand"
						Grid.Column="2"
						Click="BtnClose_Click">
					<Button.Style>
						<Style TargetType="Button">
							<Setter Property="Background" Value="#28AEED"/>
							<Style.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Background" Value="Red"/>
								</Trigger>
							</Style.Triggers>
						</Style>
					</Button.Style>

					<Button.Template>
						<ControlTemplate TargetType="Button">
							<Border Width="18" Height="18" CornerRadius="9" Background="{TemplateBinding Background}">
								<ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
							</Border>
						</ControlTemplate>
					</Button.Template>
				</Button>

			</Grid>


			<DataGrid HorizontalAlignment="Left" Name="itemsGrid" Width="440" Grid.Row="1" Height="410" VerticalAlignment="Center" AutoGenerateColumns="False" IsReadOnly="True" SelectionChanged="ItemsGrid_SelectionChanged" SelectedItem="">
				<DataGrid.Columns>
					<DataGridTextColumn Header="SKU" Binding="{Binding sku}"/>
					<DataGridTextColumn Header="Descripción" Binding="{Binding description}"/>
					<DataGridTextColumn Header="Precio unitario" Binding="{Binding unit_price}">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="TextBlock">
								<Setter Property="HorizontalAlignment" Value="Right" />
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<DataGridTextColumn Header="Precio de venta" Binding="{c:Binding 'Math.Round(sale_price, 2)'}">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="TextBlock">
								<Setter Property="HorizontalAlignment" Value="Right" />
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<DataGridTextColumn Header="Existencia" Binding="{Binding existence}">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="TextBlock">
								<Setter Property="HorizontalAlignment" Value="Right" />
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<DataGridTextColumn Header="Total" Binding="{c:Binding 'Math.Round(total, 2)'}">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="TextBlock">
								<Setter Property="HorizontalAlignment" Value="Right" />
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<!-- Using CalcBinding https://github.com/Alex141/CalcBinding -->
					<!-- Note: This does not work, tax is int/long type so the result is an integer/long type -->
					<!-- <DataGridTextColumn Header="Precio de venta" Binding="{c:Binding tax / 100 * unit_price + unit_price}"/> -->
					<!-- <DataGridTextColumn Header="Existencia" Binding="{Binding existence}"/> -->
					<!-- <DataGridTextColumn Header="Total" Binding="{c:Binding (tax / 100 * unit_price + unit_price) * existence}"/> -->
				</DataGrid.Columns>
			</DataGrid>
			<StackPanel Grid.Row="1" Margin="558,0,10,0">
				<Label x:Name="lblSKUCode" Content="Código SKU" Foreground="white"/>
				<TextBox x:Name="txtSKUCode" TextWrapping="Wrap" Text="" HorizontalAlignment="Left" Width="120" IsEnabled="False"/>
				<Label x:Name="lblDescription" Content="Descripción" Foreground="white"/>
				<TextBox x:Name="txtDescription" TextWrapping="Wrap" Text="" HorizontalAlignment="Left" Width="120" IsEnabled="False"/>
				<Label x:Name="lblTax" Content="Impuesto (I.V.A.)" Foreground="white"/>
				<TextBox x:Name="txtTax" TextWrapping="Wrap" Text="0" HorizontalAlignment="Left" TextAlignment="Right" Width="120" IsEnabled="False" PreviewTextInput="OnlyPositiveIntegersValidator"/>
				<Label x:Name="lblUnitPrice" Content="Precio unitario" Foreground="white"/>
				<TextBox x:Name="txtUnitPrice" TextWrapping="Wrap" Text="0.0" HorizontalAlignment="Left" TextAlignment="Right" Width="120" PreviewTextInput="OnlyPositiveNumbersValidator" IsEnabled="False"/>
				<Label x:Name="lblExistence" Content="Existencia" Foreground="white"/>
				<TextBox x:Name="txtExistence" TextWrapping="Wrap" Text="0" HorizontalAlignment="Left" TextAlignment="Right" Width="120" PreviewTextInput="OnlyPositiveIntegersValidator" Margin="0,0,0,20" IsEnabled="False"/>
				<Button x:Name="btnNew" Click="BtnNew_Click" Width="120" HorizontalAlignment="left" Margin="0,0,0,3" IsDefault="True">
					<AccessText>_Nuevo</AccessText>
				</Button>
				<Button x:Name="btnSave" Click="BtnSave_Click" Width="120" HorizontalAlignment="left" IsEnabled="false" Margin="0,0,0,3">
					<AccessText>_Guardar</AccessText>
				</Button>
				<Button x:Name="btnDelete" Click="BtnDelete_Click" Width="120" HorizontalAlignment="left" IsEnabled="false" Margin="0,0,0,3">
					<AccessText>_Eliminar</AccessText>
				</Button>
				<Button x:Name="btnRefresh" Width="120" HorizontalAlignment="left" Click="BtnRefresh_Click">
					<AccessText>_Actualizar (DB)</AccessText>
				</Button>
			</StackPanel>

		</Grid>
	</Border>

</Window>
